diff --git a/src/gdb_main.c b/src/gdb_main.c
index 7901f21..51929e9 100644
--- a/src/gdb_main.c
+++ b/src/gdb_main.c
@@ -58,12 +58,16 @@ typedef struct
 
 static char pbuf[BUF_SIZE+1];
 
-static target *cur_target;
+target *cur_target;
 static target *last_target;
 
+bool lnProcessCommand(int size, const char *data);
+
 static void handle_q_packet(char *packet, int len);
 static void handle_v_packet(char *packet, int len);
 static void handle_z_packet(char *packet, int len);
+static void handle_H_packet(char *packet, int len);
+static void handle_T_packet(char *packet, int len);
 
 static void gdb_target_destroy_callback(struct target_controller *tc, target *t)
 {
@@ -330,12 +334,20 @@ int gdb_main_loop(struct target_controller *tc, bool in_syscall)
 			ERROR_IF_NO_TARGET();
 			handle_z_packet(pbuf, size);
 			break;
-
-		default: 	/* Packet not implemented */
+        case 'H':
+            ERROR_IF_NO_TARGET();
+            handle_H_packet(pbuf,size);
+            break;
+        case 'T':
+            ERROR_IF_NO_TARGET();
+            handle_T_packet(pbuf,size);
+            break;
+        default: 	/* Packet not implemented */
 			DEBUG_GDB("*** Unsupported packet: %s\n", pbuf);
-			gdb_putpacketz("");
-		}
-	}
+            lnProcessCommand(size,pbuf);
+ 		//	gdb_putpacketz("");
+ 		}
+    } 
 }
 bool exec_command(char *packet, int len, const cmd_executer *exec)
 {
@@ -451,6 +463,16 @@ static void exec_q_crc(const char *packet, int len)
 			gdb_putpacket_f("C%lx", crc);
 	}
 }
+//----
+extern void execqOffsets(const char *packet, int len);
+extern void execqSymbol(const char *packet, int len);
+extern void execqThreadInfo(const char *packet, int len);
+extern void execqfThreadInfo(const char *packet, int len);
+extern void execqsThreadInfo(const char *packet, int len);
+extern void exect_qThreadExtraInfo(const char *packet, int len);
+extern void exect_qC(const char *packet, int len);
+
+
 static const cmd_executer q_commands[]=
 {
 	{"qRcmd,",                         exec_q_rcmd},
@@ -458,6 +480,15 @@ static const cmd_executer q_commands[]=
 	{"qXfer:memory-map:read::",        exec_q_memory_map},
 	{"qXfer:features:read:target.xml:",exec_q_feature_read},
 	{"qCRC:",                          exec_q_crc},
+  //--
+    {"qOffsets"                       ,execqOffsets},
+    {"qSymbol:"                       ,execqSymbol},
+    {"qThreadInfo"                    ,execqThreadInfo},
+    {"qfThreadInfo"                   ,execqfThreadInfo},
+    {"qsThreadInfo"                   ,execqsThreadInfo},
+    {"qThreadExtraInfo"               ,exect_qThreadExtraInfo},
+    {"qC"                             ,exect_qC},
+ 
 
 	{NULL,NULL},
 };
@@ -472,6 +503,46 @@ handle_q_packet(char *packet, int len)
 	gdb_putpacket("", 0);
 }
 
+//--
+extern void exec_H_cmd(const char *packet, int len);
+extern void exec_T_cmd(const char *packet, int len);
+static const cmd_executer H_commands[]=
+{
+    {"Hg",                         exec_H_cmd},
+    {"Hm",                         exec_H_cmd},
+    {"HM",                         exec_H_cmd},
+    {"Hc",                         exec_H_cmd},
+	{NULL,NULL},
+};
+
+static const cmd_executer T_commands[]=
+{
+	{"T",                         exec_T_cmd},
+	{NULL,NULL},
+};
+
+static void
+handle_T_packet(char *packet, int len)
+{
+	if(exec_command(packet,len,T_commands)) {
+		return;
+	}
+	printf("*** Unsupported packet: %s\n", packet);
+	gdb_putpacket("", 0);
+}
+
+static void
+handle_H_packet(char *packet, int len)
+{
+	if(exec_command(packet,len,H_commands)) {
+		return;
+	}
+	printf("*** Unsupported packet: %s\n", packet);
+ 	gdb_putpacket("", 0);
+ }
+ 
+
+
 static void
 handle_v_packet(char *packet, int plen)
 {
